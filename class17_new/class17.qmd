---
title: "class 17: mini project"
author: "Cynthia Lin"
format: gfm
---
The goal of this hands-on mini-project is to examine and compare the Covid-19 vaccination rates around San Diego.

We will start by downloading the most recently dated “Statewide COVID-19 Vaccines Administered by ZIP Code” CSV file from: https://data.ca.gov/dataset/covid-19-vaccine-progress-dashboard-data-by-zip-code

# Data Import

```{r}
vax <- read.csv("covid19vaccinesbyzipcode_test.csv")
head(vax)
```
>Q1. What column details the total number of people fully vaccinated? 

vax$persons_fully_vaccinated

>Q2. What column details the Zip code tabulation area? 

vax$zip_code_tabulation_area

>Q3. What is the earliest date in this dataset? 

vax$as_of_date[1]
2021-01-05

>Q4. What is the latest date in this dataset?

vax$as_of_date[nrow(wax)]

2023-02-28	

We can use skim() function for a quick overview of a new dataset like this.
```{r}
skimr::skim(vax)
```

>Q5. How many numeric columns are in this dataset?

13

>Q6. Note that there are “missing values” in the dataset. How many NA values there in the persons_fully_vaccinated column?

```{r}
sum(is.na(vax$persons_fully_vaccinated))
```

16525

>Q7. What percent of persons_fully_vaccinated values are missing (to 2 significant figures)? 

```{r}
n.missing <- sum(is.na(vax$persons_fully_vaccinated))
n.missing
```
```{r}
round((n.missing/nrow(vax) )*100, 2)
```

8.3%


## Working with dates

the lubrdate package maeks working with dates and times in R less of a pain. 

```{r}
#install.packages("lubridate")
library(lubridate)

```

```{r}
today()

```
We can now magically do math with dates.

```{r}
today() - ymd("2021-01-05")
```

How old am I
```{r}
today() - ymd("2001-06-10")
```

Let's treat the whole col
How many days have passed since the first vaccination reported in this dataset?

```{r}
#today() - vax$as_of_date[1]
```
Using the last and the first date value we can now determine how many days the dataset span?

```{r}
#vax$as_of_date[nrow(vax)] - vax$as_of_date[1]

```

```{r}
# Specify that we are using the year-month-day format
vax$as_of_date <- ymd(vax$as_of_date)
```

>Q9. How many days have passed since the last update of the dataset? 

```{r}
today() - vax$as_of_date[nrow(vax)] 
```

>Q10. How many unique dates are in the dataset (i.e. how many different dates are detailed)? 

```{r}
length(unique(vax$as_of_date))
```

```{r}
library(dplyr)

n_distinct(vax$as_of_date)
```

# Working with ZIP codes

ZIP codes are also rather annoying thigns to work with as they are numeric but not in the conventional  

```{r}
#install.packages("zipcodeR")
```

```{r}
library(zipcodeR)
```

```{r}
geocode_zip('92037')
```


```{r}
library(dplyr)

sd <- filter(vax, county == "San Diego")

nrow(sd)
```

It is time to revisit the most awesome dplyr package

```{r}
sd.10 <- filter(vax, county == "San Diego" & age5_plus_population > 1000)

nrow(sd.10)
```
> how many ZIp code careas are we dealing with?

```{r}
n_distinct(sd.10$zip_code_tabulation_area)
```
>Q11. How many distinct zip codes are listed for San Diego County? 

```{r}
n_distinct(sd$zip_code_tabulation_area)
```

>Q12. What San Diego County Zip code area has the largest 12 + Population in this dataset?

```{r}
ind = which.max(sd$age12_plus_population)
sd$zip_code_tabulation_area[2]
```


```{r}
reverse_zipcode("92154")
```

>Q13. What is the overall average “Percent of Population Fully Vaccinated” value for all San Diego “County” as of most recent date? 

```{r}
vax$as_of_date[nrow(vax)]
```
```{r}
##sd$as_of_date

sd.today <- filter(sd, as_of_date == "2023-02-28")
```

```{r}
mean(sd.today$percent_of_population_fully_vaccinated, na.rm=T)
```


>Q14. Using either ggplot or base R graphics make a summary figure that shows the distribution of Percent of Population Fully Vaccinated values as of “2022-11-15”?

```{r}
hist(sd.today$percent_of_population_fully_vaccinated, breaks=20)
```


# Focus on UCSD/La Jolla


```{r}
ucsd <- filter(sd, zip_code_tabulation_area=="92037")
ucsd[1,]$age5_plus_population
```

>Q15. Using ggplot make a graph of the vaccination rate time course for the 92037 ZIP code area:

```{r}
library(ggplot2)
```


```{r}
 ucplot <- ggplot(ucsd) +
  aes(as_of_date,
      percent_of_population_fully_vaccinated) +
  geom_point() +
  geom_line(group=1) +
  ylim(c(0,1)) +
  labs(x="Date", y="Percent Vaccinated")

ucplot
```


# Comparing to similar sized areas

Let’s return to the full dataset and look across every zip code area with a population at least as large as that of 92037 on as_of_date “2022-02-22”.

>Q16. Calculate the mean “Percent of Population Fully Vaccinated” for ZIP code areas with a population as large as 92037 (La Jolla) as_of_date “2022-11-15”. Add this as a straight horizontal line to your plot from above with the geom_hline() function?

```{r}
vax.36 <- filter(vax, age5_plus_population > 36144 &
                as_of_date == "2022-11-15")
```


```{r}
ave <- mean(vax.36$percent_of_population_fully_vaccinated)
ave
```

```{r}
library(ggplot2)
```

```{r}
ucplot + geom_hline(yintercept=ave, color = "red", linetype=2)
```

>Q17. What is the 6 number summary (Min, 1st Qu., Median, Mean, 3rd Qu., and Max) of the “Percent of Population Fully Vaccinated” values for ZIP code areas with a population as large as 92037 (La Jolla) as_of_date “2023-02-28”?

```{r}
summary(vax.36$percent_of_population_fully_vaccinated)
```


>Q18. Using ggplot generate a histogram of this data.

```{r}
ggplot(vax.36) +
  aes(percent_of_population_fully_vaccinated) +
  geom_histogram() +
  xlim(0,1)
```

>Q19. Is the 92109 and 92040 ZIP code areas above or below the average value you calculated for all these above?

```{r}

x <- filter(vax.36, zip_code_tabulation_area %in% c("92109", "92040"))
x$percent_of_population_fully_vaccinated
```
>Q20. Finally make a time course plot of vaccination progress for all areas in the full dataset with a age5_plus_population > 36144.

```{r}
vax.36.all <- filter(vax, age5_plus_population > 36144 )


ggplot(vax.36.all) +
  aes(as_of_date,
      percent_of_population_fully_vaccinated, 
      group=zip_code_tabulation_area) +
  geom_line(alpha=0.2, color="blue") +
  ylim(0,1) +
  labs(x="Date", y="Percent Vaccinated",
       title= "Vaccination Rate Across California",
       subtitle= "only areas with a population above 36k are shown") +
  geom_hline(yintercept = ave, linetype= 2)

```







